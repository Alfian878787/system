<?php

namespace Habari;

/**
 * A hidden field control based on FormControl for output via a FormUI.
 */
class FormControlAutocomplete extends FormControl
{
	static $outpre;

	/**
	 * Called upon construct.  Sets control properties
	 */
	public function _extend()
	{
		$this->properties['type'] = 'hidden';
		$this->properties['class'] = 'autocomplete_control';
		$this->properties['data-autocomplete-config'] = '{}';
	}

	/**
	 * Return the HTML/script required for this control.  Do it only once.
	 * @return string The HTML/javascript required for this control.
	 */
	public function pre_out()
	{
		$out = '';
		if ( !self::$outpre ) {
			self::$outpre = true;
			$out = <<<  CUSTOM_AUTOCOMPLETE_JS
				<script type="text/javascript">
controls.init(function(){
	$('.autocomplete_control').each(function(){
		var self = $(this);
		var autocomplete_config = self.data('autocomplete-config');
		$.extend(autocomplete_config, {
			data: [{id:0,text:'foo'},{id:1,text:'bar'},{id:2,text:'baz'}]
		});
		self.select2(autocomplete_config);
	});

	$('.autocomplete_control').closest('form').submit(function(){
	});
});
				</script>
CUSTOM_AUTOCOMPLETE_JS;
		}
		return $out;
	}

	/**
	 * Set the URL to use for ajax callbacks.
	 * The callback needs to accept at least the search term as the POSTed parameter "q"
	 * @param string $url The URL to submit the AJAX request to
	 * @param bool $ishtml If true, the display response returned via AJAX is to be rendered as HTML (unescaped)
	 * @return FormControlAutocomplete $this
	 */
	public function set_ajax($url, $ishtml = false) {
		$this->set_settings(
			array(
				'ajax_url' => $url,
				'ajax_ishtml' => $ishtml,
			),
			true
		);
		return $this;
	}


	public function get(Theme $theme)
	{
/*
		Stack::add('template_header_javascript', 'select2' );
		Stack::add('template_stylesheet', 'select2-css');
*/
		return parent::get($theme); // TODO: Change the autogenerated stub
	}


}

?>